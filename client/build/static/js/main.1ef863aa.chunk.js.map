{"version":3,"sources":["components/Hero/Plainhero.png","ProtectedRoute.js","components/Wrapper/Wrapper.js","components/Hero/Hero.js","Home.js","components/Navbar/Navbar.js","components/Footer/Footer.js","components/SelectionContainer/SelectionContainer.js","components/Modal/Modal.js","components/Musclecard/Exercisecard.js","components/Musclecard/Musclecard.js","pages/Choosemuscles.js","utils/API.js","components/Mainworkout/Mainworkout.js","pages/Createworkout.js","components/Dashboardlinks/Dashboardlinks.js","components/Datadashboard/PieChart.js","components/Datadashboard/WeightChart.js","components/Datadashboard/RepsChart.js","components/Datadashboard/TimeChart.js","pages/Datadashboard.js","components/StatsContainer/StatsContainer.js","pages/Enterstats.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProtectedRoute","component","args","withAuthenticationRequired","Wrapper","props","useAuth0","isLoading","error","message","className","children","Hero","style","backgroundImage","Home","loginWithRedirect","isAuthenticated","user","logout","console","log","useState","isOpen","setIsOpen","Navbar","dark","expand","src","NavbarToggler","onClick","Collapse","navbar","Nav","NavbarText","to","history","replace","Header","Footer","href","Container","Modal","window","onclick","e","target","id","toggleModal","Exercisecard","modal","setModal","gif","preventDefault","exercise","width","key","exerciseID","process","alt","type","name","value","placeholder","exerciseArray","CardBody","description","Muscles","state","exercises","workoutExercises","prepArray","storage","setState","Form","data","map","muscles","nameID","data-toggle","displayMusclesandExercises","muscle","filter","document","getElementById","image","this","pathname","disabled","length","Component","Musclecard","axios","get","stats","post","userToken","params","token","MainWorkout","open","setOpen","useEffect","date","sets","reps","time","muscleGroup","formObject","setFormObject","handleInputChange","event","onChange","required","API","sub","Date","toISOString","substring","parseInt","totalReps","totalTime","then","catch","err","Workout","location","useLocation","StatsLink","PieChart","chest","setChest","back","setBack","shoulders","setShoulders","biceps","setBiceps","triceps","setTriceps","quadriceps","setQuadriceps","hamstringsAndGlutes","setHamstringAndGlutes","abdominals","setAbdominals","label","setLabel","chestSets","backSets","shouldersSets","bicepsSets","tricepsSets","quadricepsSets","hamstringsAndGlutesSets","abdominalsSets","res","loginUserStats","currentDay","getDay","calculateTimePassed","getTime","getElementsByClassName","display","push","totalSetsSum","determineSets","array","reduce","a","b","totalSetsAll","myData","angle","innerRadius","onValueClick","height","padAngle","WeightChart","weightData","setWeightData","leanBodyMassData","setLeanBodyMassData","lastDrawLocation","setLastDrawLocation","loginUserWeight","loginUserLeanBodyMass","firstDate","determineXCoordinate","Math","ceil","weight","forEach","coordinate","leanBodyMass","x","y","loadStats","myPalette","orientation","colors","items","animation","xDomain","left","right","yDomain","bottom","top","colorType","colorDomain","colorRange","title","color","onBrushEnd","area","onDrag","RepsChart","conditioning","setConditioning","setValue","chestData","backData","shouldersData","bicepsData","tricepsData","quadricepsData","hamstringsAndGlutesData","abdominalsData","conditioningData","chestCoord","backCoord","shouldersCoord","bicepsCoord","tricepsCoord","quadricepsCoord","hamstringsAndGlutesCoord","abdominalsCoord","conditioningCoord","final","aggregateData","rawData","evenTime","evenTimeArray","grouped","_","groupBy","keys","Object","i","sortedDateAndGroup","total","object","generateCoords","coord","onValueMouseOver","TimeChart","Dashboard","username","given_name","nickname","Stats","handleFormSubmit","StatsContainer","htmlFor","App","exact","path","Workouts","Boolean","hostname","match","ReactDOM","render","domain","clientId","redirectUri","origin","Fragment","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ef863aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Plainhero.8164cc1b.png\";","import React from 'react';\nimport { withAuthenticationRequired } from '@auth0/auth0-react';\nimport { Route } from 'react-router-dom';\n\nexport const ProtectedRoute = ({\n  component,\n  ...args\n}) => (\n  <Route\n    component={withAuthenticationRequired(component, {\n      // If using a Hash Router, you need to pass the hash fragment as `returnTo`\n      // returnTo: () => window.location.hash.substr(1),\n    })}\n    {...args}\n  />\n);","import React from \"react\";\nimport \"./style.css\";\nimport { useAuth0 } from '@auth0/auth0-react';\n\nfunction Wrapper(props) {\n\n  const {\n    isLoading,\n    error,\n  } = useAuth0();\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n  if (error) {\n    return <div>Oops... {error.message}</div>;\n  }\n\n  return <main className=\"container wrapper justify-content-center mt-5\">{props.children}</main>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\nimport backgroundImage from \"./Plainhero.png\"\n\nfunction Hero(props) {\n  return (\n    <div className=\"hero text-center\" style={{ backgroundImage: `url(${backgroundImage})` }}>\n        <div className=\"float-left mt-3\">\n            <h1>TRANSFORM</h1>\n            <h1 className=\"float-left green\">YOUR LIFE</h1>\n        </div>\n        <div className=\"float-right text-left mr-2 pitch\">\n            <div className=\"pitch-highlight\">\n                <h6 className=\"ml-2 pitchFont\">We're not like other gyms. <br/>You don't need a contract, or a mask to workout with us.<br/> LoneWolf lets you build your own workout <br/>so your can get your sweat on anytime, anywhere.</h6>     \n            </div>\n        </div>  \n    </div>\n  );\n}\n\nexport default Hero;","import React, {useState} from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler, \n    Nav,\n    NavbarText,\n    } from 'reactstrap';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport {Link} from \"react-router-dom\";\nimport Wrapper from \"./components/Wrapper/Wrapper\"\nimport \"./components/Wrapper/login.css\"\nimport Hero from \"./components/Hero/Hero\"\n\n\nfunction Home(props) {\n    const { loginWithRedirect, isAuthenticated, user, logout } = useAuth0();\n    console.log(\"here is the user\", user);\n\n    console.log(isAuthenticated)\n\n    const signOut = () => {\n        logout();\n        props.history.replace('/');\n    }\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n\n\n    return (\n        <div className=\"App\" >\n        <Navbar className=\"NavbarColor\" dark expand=\"md\">\n            <img className=\"Homelogo\" src={process.env.PUBLIC_URL + \"/assets/logo/lonewolflogo.png\"}></img>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n                <NavbarText>\n        \n                {!isAuthenticated && (\n                            <button className=\"btn-dashboardBttns btn-sm mr-1 ml-1\" onClick={loginWithRedirect}>Log in</button>\n                    )}\n                </NavbarText>\n                <NavbarText className=\"ml-2 mr-2\">\n                    {isAuthenticated &&  \n                <Link to=\"/dashboard\">Dashboard</Link>}\n                </NavbarText>\n                <NavbarText className=\"ml-2 mr-2\">\n                {isAuthenticated &&  \n                    <Link to=\"/stats\">Enter Stats</Link>}\n                </NavbarText>\n                <NavbarText className=\"ml-2 mr-2\">\n                    {isAuthenticated &&  \n                    <Link to=\"/build\">Build Workout</Link>}\n                </NavbarText>\n                <NavbarText>\n                    {isAuthenticated && \n                    <button className=\"btn-dashboardBttns btn-sm mr-2 ml-2\" onClick={() => { signOut()}}>Sign Out</button>}\n                </NavbarText>   \n            </Nav>\n            </Collapse>\n        </Navbar>\n        <Hero/>\n        <Wrapper>\n        <div className=\"row\">\n            <div className=\"col-md-8\">\n                <img src={process.env.PUBLIC_URL + \"/assets/images/Musclecircle.png\"} className=\"muscleCircle\" />\n            </div>\n                <div className=\"col-md-4 mb-5 align-self-end\">\n                    <h3 className=\"white\">Choose How You Build</h3>\n                    <h6 className=\"white\">Pick which muscle group you want to work on, select an exercise and then get to work!</h6>\n                </div>\n        </div>    \n        <div className=\"row\">\n            <div className=\"col-md-4 mt-5\">\n                    <h3 className=\"white\">So Drop The Weights</h3>\n                    <h6 className=\"white\">And Hit The Floor!</h6>\n            </div>\n            <div className=\"col-md-8 align-self-end justify-content-end\">\n                <img src={process.env.PUBLIC_URL + \"/assets/images/droptheweights.png\"} className=\"hitFloor justify-content-end float-right\" />\n\n            </div>\n        </div>\n        <div className=\"row mt-5 pt-5\">\n            <div className=\"col-md-12 text-center\">\n                <h1 className=\"white\">PUSH YOUR LIMITS</h1>\n            </div>\n        </div>\n        </Wrapper>    \n        </div>\n    )\n\n\n}\n\nexport default Home;","import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler, \n    Nav,\n    NavbarText,\n    } from 'reactstrap';\nfunction Header() {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    // constructor(props){\n    //     super(props);\n    //     this.state = {\n    //         menu: false\n    //     };\n    //     this.toggleMenu = this.toggleMenu.bind(this);\n    // }\n    // toggleMenu(){\n    //     this.setState({ menu: !this.state.menu })\n    \n\n    return (\n        // <nav className=\"navbar navbar-expand-lg navbar-dark absolute-top\">\n        //     <div className=\"navbar-brand\">\n        //         <img className=\"logo\" src={process.env.PUBLIC_URL + \"/assets/logo/Lonewolflogo.png\"} alt=\"LoneWolf logo\"/>\n        //     </div>\n        //     <button className=\"navbar-toggler ml-auto\" type=\"button\" onClick={ this.toggleMenu }>\n        //         <span className=\"navbar-toggler-icon\"></span>\n        //     </button>\n        //     <div className={\"collapse navbar-collapse \" + show}>\n        //         <ul className=\"navbar-nav ml-auto navFont\">\n        //             <li className=\"nav-item nav-link\">\n        //                 <Link\n        //                         to=\"/dashboard\" className={window.location.pathname === \"/dashboard\" || window.location.pathname === \"/dashboard\" ? \"nav-link active\" : \"nav-link\"}\n        //                 >\n        //                 Dashboard\n        //                 </Link>\n        //             </li>\n        //             <li className=\"nav-item nav-link\">\n        //                 <Link\n        //                         to=\"/stats\" className={window.location.pathname === \"/stats\" || window.location.pathname === \"/stats\" ? \"nav-link active\" : \"nav-link\"}\n        //                 >\n        //                 Enter Stats\n        //                 </Link>\n        //             </li>\n        //             <li className=\"nav-item nav-link\">\n        //                 <Link\n        //                         to=\"/build\" className={window.location.pathname === \"/build\" || window.location.pathname === \"/build\" ? \"nav-link active\" : \"nav-link\"}\n        //                 >\n        //                 Build Workout\n        //                 </Link>\n        //             </li>\n        //             <li className=\"nav-item nav-link\">\n        //                 <Link\n        //                     to=\"/\" className={window.location.pathname === \"/\" || window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n        //                 >\n        //                 Log Out \n        //                 </Link>\n        //             </li>\n        //         </ul>\n        //     </div>\n\n\n        \n        // </nav>\n        <Navbar className=\"NavbarColor\" dark expand=\"md\">\n            <img className=\"Homelogo\" src={process.env.PUBLIC_URL + \"/assets/logo/lonewolflogo.png\"}></img>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n                <NavbarText className=\"ml-2 mr-2\"> \n                    <Link to=\"/dashboard\">Dashboard</Link>\n                </NavbarText>\n                <NavbarText className=\"ml-2 mr-2\">\n                  \n                    <Link to=\"/stats\">Enter Stats</Link>\n                </NavbarText>\n                <NavbarText className=\"ml-2 mr-2\">\n                    <Link to=\"/build\">Build Workout</Link>\n                </NavbarText>\n                <NavbarText>\n                    <button className=\"btn-dashboardBttns btn-sm mr-2 ml-2\"><Link to=\"/\">Home</Link></button>\n                </NavbarText>   \n            </Nav>\n            </Collapse>\n        </Navbar>\n        \n    );\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\"\n\nfunction Footer(){\n    return (\n        <div className=\"row md-4 fixed-bottom\">\n        <div className=\"col-md-12 text-muted\">\n                <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\n                <a className=\"copyrightLink\" href=\"https://corvus-cyber.github.io/React_Portfolio/#/\"> Wyatt Hancock and</a>\n                <a className=\"copyrightLink\" href=\"https://dilanli.github.io/Profile-React/\"> Dilan Li</a>\n                </div>\n        </div> \n        </div>\n    );\n}\n\nexport default Footer;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Container(props) {\n  return <main className=\"selection-container container\">{props.children}</main>;\n}\n\nexport default Container;","import React from \"react\";\nimport \"./style.css\"\n\nfunction Modal(props){\n    window.onclick=(e)=>{\n        if(e.target.id===\"customModal\"){\n            props.toggleModal(e)\n        }\n    }\n    return(\n        <aside id=\"customModal\">\n            <div className=\"innerContent\">\n                {props.children}\n            </div>\n        </aside>\n    )\n}\n\nexport default Modal;","import React, {useState} from 'react'\nimport \"./style.css\"\nimport { Collapse, Button, CardBody } from 'reactstrap';\nimport Modal from \"../Modal/Modal\";\nimport {\n  BsFillInfoCircleFill\n} from \"react-icons/bs\";\n\n\nexport default function Exercisecard(props) {\n    const [isOpen, setIsOpen] = useState(false);\n    const [modal, setModal] = useState(false);\n    \n    const toggle = () => setIsOpen(!isOpen);\n\n    function handleOnClick(){\n        console.log(props.exercise);\n        props.exerciseArray(props.exercise);\n    };\n\n    const toggleModal=(e, gif)=>{\n        e.preventDefault();\n        console.log(e.target)\n        // console.log(gif)\n        setModal(!modal);\n    }\n\nreturn(\n    <div className=\"mr-2 ml-2\">\n        {console.log(props.exercise)}\n                <div className=\"col-md-4 mr-2 ml-2 mt-5 text-center justify-content-center\">\n                    <div className=\"card\" id=\"card\" style={{width: 18 + \"rem\"}} key={props.exercise.exerciseID}>\n                        <img src={process.env.PUBLIC_URL + props.exercise.gif} onClick={(e)=>toggleModal(e, props.exercise.gif)} className=\"img-fluid\" alt=\"gif of exercise\"/>\n                            {modal ? (<Modal toggleModal={toggleModal}><img src={process.env.PUBLIC_URL + props.exercise.gif} className=\"img-fluid  pt-5 mt-5 mb-5 pb-5\" alt=\"gif of exercise\"/></Modal>):(<></>)}\n                            <div className=\"card-head\">\n                            <h5>{props.exercise.exercise}</h5>\n                            </div>\n                            <div className=\"justify-content-center text-center\">\n                                <form className=\"form\">\n                                    <div className=\"form-group\">\n                                        <input type=\"hidden\" name=\"weight\" value={props.exercise} className=\"form-control\" id=\"weight\" placeholder=\"Weight\" />\n                                    </div>\n                                    <button type=\"button\" className=\"btnAdd btn-sm mb-1\" onClick={handleOnClick}>Add To Workout</button>\n                                </form>    \n                            \n                            <button type=\"button\" className=\"btn-information mb-1 btn-sm\"  onClick={toggle}><BsFillInfoCircleFill/></button>\n                            <Collapse isOpen={isOpen}>\n                                <CardBody>\n                                {props.exercise.description}\n                                </CardBody>\n                            </Collapse>\n                            </div>\n                    </div> \n                </div> \n            </div>\n    )\n}","import React, {Component} from \"react\";\nimport data from \"../../exercises.json\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"../SelectionContainer/SelectionContainer\";\nimport \"./style.css\"\nimport ExerciseCard from \"./Exercisecard\"\n\nclass Muscles extends Component{\n    state={\n      exercises: [],\n      workoutExercises: []\n    }\n  \n  prepArray=(exercise) => { \n      let storage =[...this.state.workoutExercises, exercise]\n      this.setState({workoutExercises: storage})\n  }\n\n\n  render(){\n     const Form = () =>{\n      console.log(data)\n        return data.map(muscles => \n        \n        <div className=\"col-md-4 mr-2 ml-2 mt-2 text-center justify-content-center\" key={muscles.nameID}>\n            <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n              <button key={muscles.nameID} type=\"button\" onClick={() => {displayMusclesandExercises(muscles.name)}} \n              className=\"btn-muscleBttns btn-lg btn-block\"><h5>{muscles.name}</h5></button>\n          </div>\n        </div>  \n      )\n    }\n\n\n    const displayMusclesandExercises = (name) =>{\n      console.log(name)\n      let muscle = data.filter(muscle => { return name === muscle.name})[0]\n      console.log(\"appropriate muscle\", muscle.exercises)\n      document.getElementById(\"muscleImage\").src=process.env.PUBLIC_URL +muscle.image;\n      this.setState({exercises: muscle.exercises})\n    }\n\n  return(\n    <Container>\n      \n    <div className=\"mt-5 pt-4 pb-4 justify-content-center\">\n      <div className=\"row justify-content-center\">\n        <img className=\"muscleGroupImg\" id=\"muscleImage\" src={process.env.PUBLIC_URL + \"/assets/muscleGroups/None.png\"}  alt=\"muscle groups\"></img>\n      </div>\n      <div className=\"row justify-content-center\">\n        <Form/>\n      </div>\n      <div className=\"row justify-content-center\">\n          {this.state.exercises.map(exercise=> (             \n                      <ExerciseCard\n                          key = {exercise.exerciseID}\n                          exercise= {exercise}\n                          exerciseArray= {this.prepArray}   \n                      />\n                    \n            ))}\n      </div>\n      <div className=\"row justify-content-center mt-5\">\n        <li className=\"nav-item nav-link text-center\">\n            <Link\n                to= {{pathname: \"/workouts\",\n                state: {workoutExercises: this.state.workoutExercises }}}>\n                    <button type=\"submit\" className=\"btn-routeToWorkout btn-lg btn-block\" disabled={this.state.workoutExercises.length<1}> View Workout</button>\n            </Link>\n        </li>\n      </div>\n    </div>\n    </Container>\n\n\n  );\n  }\n}\n\nexport default Muscles;","import React from 'react';\nimport Navbar from \"../components/Navbar/Navbar\"\nimport Footer from \"../components/Footer/Footer\"\nimport Wrapper from \"../components/Wrapper/Wrapper\"\nimport Musclecard from \"../components/Musclecard/Musclecard\"\nfunction Muscles() {\n  \n    return (\n      <div>\n        <Navbar /> \n        <Wrapper>\n            <Musclecard/>\n           \n        </Wrapper>\n        <Footer />\n      </div>\n    );\n  }\n  \n  export default Muscles;","import axios from \"axios\";\n\nexport default {\n\n  // get weight and lean body mass stats\n  getWeightStats: function () {\n    return axios.get(\"/api/stats\");\n  },\n\n  // Saves new user weight and lean body mass to the database\n  saveStats: function (stats) {\n    return axios.post(\"api/stats\", stats);\n  },\n\n  // get reps and time data\n  getRepsAndTime: function (userToken) {\n    return axios.get(\"/api/repsandtime\", { params: { token: userToken} });\n  },\n\n  // Saves reps and time of exercises to the database\n  saveRepsAndTime: function (data) {\n    return axios.post(\"api/repsandtime\", data);\n  }\n};\n","import React, {useState, useEffect} from 'react'\n\n// import {useLocation} from \"react-router-dom\";\nimport \"./style.css\"\n\nimport { Collapse, Button, CardBody} from 'reactstrap';\nimport {BsFillInfoCircleFill} from \"react-icons/bs\";\nimport Modal from \"../Modal/Modal\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport API from \".././../utils/API\";\n\n\nexport default function MainWorkout(props) {\n    const [open, setOpen] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const [modal, setModal] = useState(false);\n    useEffect(()=>{console.log(\"hello\", modal)},[modal])\n\n    const {user} = useAuth0();\n\n    //object model for workout submission\n    const [formObject, setFormObject] = useState({\n        token: \"\",\n        date: null,\n        sets: null,\n        reps: null,\n        time: null,\n        muscleGroup: \"\"\n      })\n\n    // const location = useLocation();\n    const toggle = () => setIsOpen(!isOpen);\n    // console.log(location)\n    if (!props.exercise){\n        return <div>Empty</div>\n    } \n\n    function handleInputChange(event) {\n        const { name, value } = event.target;\n        setFormObject({...formObject, [name]: value})\n    };\n\n    function handleFormSubmit() {\n        if (formObject.sets || formObject.reps || formObject.time) {\n          API.saveRepsAndTime({\n            token: user.sub,\n            date: new Date().toISOString().substring(0,10),\n            sets: parseInt(formObject.sets),\n            reps: parseInt(formObject.reps),\n            totalReps: parseInt(formObject.sets * formObject.reps),\n            time: parseInt(formObject.time),\n            totalTime: parseInt(formObject.time * formObject.sets),\n            muscleGroup: props.exercise.muscle\n          })\n            .then(() => {\n                console.log(formObject)\n                setFormObject({\n              sets: \"\",\n              reps: \"\",\n              time: \"\"\n            })})\n            .catch(err => console.log(err));\n        }\n    };\n\n    const toggleModal=(e, gif)=>{\n        e.preventDefault();\n        console.log(e.target)\n        // console.log(gif)\n        setModal(!modal);\n    }\n\n\n    \n\n    return(\n        <div className={open ? \"open\" : null}> \n            <div className=\"row exercise mb-2 pb-2 pt-2\" id={\"yellow\"} key={props.exercise.exerciseID}>\n                {/* {console.log(props.exercise)} */}\n                <div className=\"col-md-6 text-center justify-content-center\">\n                    <img src={process.env.PUBLIC_URL + props.exercise.gif} onClick={(e)=>toggleModal(e, props.exercise.gif)} className=\"customFluid mt-1 mb-1\" alt=\"gif of exercise\"/>\n                        {modal ? (<Modal toggleModal={toggleModal}><img src={process.env.PUBLIC_URL + props.exercise.gif} className=\"img-fluid  pt-5 mt-5 mb-5 pb-5\" alt=\"gif of exercise\"/></Modal>):(<></>)}\n                </div> \n                <div className=\"col-md-2 mt-5 text-center\"><h5>{props.exercise.exercise}</h5></div>\n\n                    <div className=\"justify-content-center text-center pt-2 pl-5 ml-5\">\n                        <form className=\"form\">\n                            <div className=\"form-group\">\n                                <input onChange={handleInputChange} type=\"number\" className=\"form-control\" id={props.exercise.muscle + \" sets\"}  placeholder=\"Enter sets\" name=\"sets\" value={formObject.sets} required/>\n                                <input onChange={handleInputChange} type=\"number\" className=\"form-control\" id={props.exercise.muscle + \" reps\"}  placeholder=\"Enter reps\" name=\"reps\"value={formObject.reps}/>\n                                <input onChange={handleInputChange} type=\"number\" className=\"form-control\" id={props.exercise.muscle + \" time\"} placeholder=\"Enter time (secs)\"name=\"time\"value={formObject.time}/>\n                            </div>\n                            <button type=\"button\" className=\"mr-1 complete\" onClick={() => {setOpen(!open); handleFormSubmit()}}>Complete</button>\n                        </form>    \n                    </div>\n                    <button type=\"button\" className=\"mr-3 ml-3 mt-2 btn-information\"  onClick={toggle}><BsFillInfoCircleFill/></button>\n                    <Collapse className=\"pr-2 pl-2 text-center\" isOpen={isOpen}>\n                        <CardBody>\n                            {props.exercise.description}\n                        </CardBody>\n                    </Collapse>              \n            </div> \n        </div>   \n    )\n}","import React from 'react';\nimport Navbar from \"../components/Navbar/Navbar\"\nimport Footer from \"../components/Footer/Footer\"\nimport Wrapper from \"../components/Wrapper/Wrapper\"\nimport MainWorkout from \"../components/Mainworkout/Mainworkout\"\nimport {useLocation, Link} from \"react-router-dom\";\nimport {\n  GiMuscleUp\n\n} from \"react-icons/gi\";\n\nfunction Workout() {\n  const location = useLocation();\n  if(!location.state || location.state.workoutExercises===[]){\n    return (\n      <div>\n        <Navbar /> \n        <Wrapper>\n          <div className=\"row justify-content-md-center\">\n            <div className=\"col-md-12 text-center mt-5 mb-5\">\n              <h3 className=\"emptyState mt-5\">A Lone Wolf cannot hope to survive without fitness. Return to the Build Workout page to choose your exercises.</h3>\n            </div>\n            <div className=\"col-md-6 text-center mt-5\">\n              <li className=\"nav-item nav-link text-center\">\n                <Link\n                    to=\"/build\" className={window.location.pathname === \"/build\" || window.location.pathname === \"/contact\" ? \"nav-link active\" : \"nav-link\"}>\n                        <button type=\"submit\" className=\"btn-return btn-lg btn-block\">Build Workout</button>\n                </Link>\n              </li>\n            </div>\n          </div>\n        </Wrapper>\n        <Footer />\n      </div>\n    )\n  }\n  \n  const workoutExercises = location.state.workoutExercises || []; \n  console.log(workoutExercises)\n    return (\n      <div>\n        <Navbar /> \n        <Wrapper>\n        {workoutExercises.map(exercise=>( \n          <MainWorkout\n            key = {exercise.exerciseID}\n            exercise= {exercise} \n          />\n        ))}\n        </Wrapper>\n        <Footer />\n      </div>\n    );\n  }\n  \n  export default Workout;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\"\n\n\nfunction StatsLink(){\n    return(\n        <div className=\"row justify-content-center\">\n            <li className=\"nav-item nav-link\">\n                <Link\n                    to=\"/stats\" className={window.location.pathname === \"/stats\" || window.location.pathname === \"/stats\" ? \"nav-link active\" : \"nav-link\"}>\n                        <button type=\"submit\" className=\"linktoStats\"><h4>Enter Stats</h4></button>\n                </Link>\n            </li>\n        </div>\n    )\n}\n\nexport default StatsLink;","import React, { useEffect, useState } from 'react';\nimport \"../../../node_modules/react-vis/dist/style.css\"\nimport { RadialChart } from '../../../node_modules/react-vis';\nimport \"./chartStyle.css\";\nimport API from \"../../utils/API\";\nimport { useAuth0 } from '@auth0/auth0-react';\n\nfunction PieChart() {\n\n    const [chest, setChest] = useState(0);\n    const [back, setBack] = useState(0);\n    const [shoulders, setShoulders] = useState(0);\n    const [biceps, setBiceps] = useState(0);\n    const [triceps, setTriceps] = useState(0);\n    const [quadriceps, setQuadriceps] = useState(0);\n    const [hamstringsAndGlutes, setHamstringAndGlutes] = useState(0);\n    const [abdominals, setAbdominals] = useState(0);\n\n    const [label, setLabel] = useState(\"\");\n\n    let chestSets = [];\n    let backSets = [];\n    let shouldersSets = [];\n    let bicepsSets = [];\n    let tricepsSets = [];\n    let quadricepsSets = [];\n    let hamstringsAndGlutesSets = [];\n    let abdominalsSets = [];\n\n    useEffect(() => {\n        loadStats()\n    }, [])\n\n    const { user } = useAuth0()\n\n    function loadStats() {\n\n        API.getRepsAndTime(user.sub)\n            .then(res => {\n                //grab only the stats of the logged-in user\n                let loginUserStats = res.data;\n                let currentDay = new Date().getDay();\n                let currentWeekData = [];\n\n                if (loginUserStats.length === 0){\n                    setLabel(\"Add workouts to see your muscle balance.\");\n                    document.getElementsByClassName(\"rv-radial-chart\")[0].style.display = \"none\";\n                }\n\n                function calculateTimePassed(date) {\n                    return (new Date().getTime() - new Date(date).getTime()) / (1000 * 3600 * 24);\n                }\n\n                currentWeekData = loginUserStats.filter(data => {\n                    switch (currentDay) {\n                        case 0:\n                            return calculateTimePassed(data.date) < 1;\n                        case 1:\n                            return calculateTimePassed(data.date) < 2;\n                        case 2:\n                            return calculateTimePassed(data.date) < 3;\n                        case 3:\n                            return calculateTimePassed(data.date) < 4;\n                        case 4:\n                            return calculateTimePassed(data.date) < 5;\n                        case 5:\n                            return calculateTimePassed(data.date) < 6;\n                        case 6:\n                            return calculateTimePassed(data.date) < 7;\n                    }\n                })\n\n\n                currentWeekData.filter(data => {\n                    switch (data.muscleGroup) {\n                        case \"Chest\":\n                            chestSets.push(data.sets)\n                            break;\n                        case \"Back\":\n                            backSets.push(data.sets)\n                            break;\n                        case \"Shoulders\":\n                            shouldersSets.push(data.sets)\n                            break;\n                        case \"Triceps\":\n                            tricepsSets.push(data.sets)\n                            break;\n                        case \"Biceps\":\n                            bicepsSets.push(data.sets)\n                            break;\n                        case \"Quadriceps\":\n                            quadricepsSets.push(data.sets)\n                            break;\n                        case \"Hamstrings and Glutes\":\n                            hamstringsAndGlutesSets.push(data.sets)\n                            break;\n                        case \"Abs\":\n                            abdominalsSets.push(data.sets)\n                    }\n                })\n\n            }).then(() => {\n                let totalSetsSum;\n                function determineSets(array) {\n                    totalSetsSum = array.reduce(function (a, b) {\n                        return a + b;\n                    }, 0);\n                }\n                \n                if (abdominalsSets.length > 0) {\n                    determineSets(abdominalsSets);\n                    setAbdominals(totalSetsSum);\n                  };\n                  if (backSets.length > 0) {\n                    determineSets(backSets);\n                    setBack(totalSetsSum);\n                  };\n                  if (chestSets.length > 0) {\n                    determineSets(chestSets);\n                    setChest(totalSetsSum);\n                  };\n                  if (shouldersSets.length > 0) {\n                    determineSets(shouldersSets);\n                    setShoulders(totalSetsSum);\n                  };\n                  if (tricepsSets.length > 0) {\n                    determineSets(tricepsSets);\n                    setTriceps(totalSetsSum);\n                  };\n                  if (bicepsSets.length > 0) {\n                    determineSets(bicepsSets);\n                    setBiceps(totalSetsSum);\n                  };\n                  if (quadricepsSets.length > 0) {\n                    determineSets(quadricepsSets);\n                    setQuadriceps(totalSetsSum);\n                  };\n                  if (hamstringsAndGlutesSets.length > 0) {\n                    determineSets(hamstringsAndGlutesSets);\n                    setHamstringAndGlutes(totalSetsSum)\n                  };\n            })\n            .catch(err => console.log(err));\n    }\n\n    const totalSetsAll = chest + back + shoulders + triceps + biceps + quadriceps + hamstringsAndGlutes + abdominals\n    \n    const myData = [\n        {\n            angle: chest/totalSetsAll * 360,\n            innerRadius: 0.7,\n            label: \"Chest\"\n        },\n        {\n            angle: back/totalSetsAll * 360,\n            innerRadius: 0.7,\n            label: \"Back\"\n        },\n        {\n            angle: shoulders/totalSetsAll * 360,\n            innerRadius: 0.7,\n            label: \"Shoulders\"\n        },\n        {\n            angle: triceps/totalSetsAll * 360,\n            innerRadius: 0.7,\n            label: \"Triceps\"\n\n        },\n        {\n            angle: biceps/totalSetsAll * 360,\n            innerRadius: 0.7,\n            label: \"Biceps\"\n        },\n        {\n            angle: quadriceps/totalSetsAll * 360,\n            innerRadius: 0.7,\n            label: \"Quadriceps\"\n        },\n        {\n            angle: hamstringsAndGlutes/totalSetsAll * 360,\n            innerRadius: 0.7,\n            label: \"Hamstrings and Glutes\"\n        },\n        {\n            angle: abdominals/totalSetsAll * 360,\n            innerRadius: 0.7,\n            label: \"Abs\"\n        }\n    ];\n\n    const myPalette = [\"#cf352d\", \"#2e5cdb\", \"#81ebe2\", \"#67d676\", \"#dea833\", \"#9e0fab\", \"#e6f029\", \"#d6b6cf\", \"#04592d\"]\n\n    return (\n        <div className=\"row pie-chart\">\n            <div className=\"chart col-md-8 col-sm-8 text-center\">\n                <p className=\"chart-title\">Muscle Balance History This Week</p>\n                <RadialChart \n                onValueClick={(event)=>{\n                    setLabel(event.label)\n                    }}\n                    data={myData} width={300} height={300} padAngle={0.05}\n                    ></RadialChart>\n                <p className=\"pie-chart-label\">{label}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default PieChart;","import React, { useEffect, useState } from 'react';\nimport \"../../../node_modules/react-vis/dist/style.css\"\nimport { FlexibleWidthXYPlot, LineSeries, XAxis, YAxis, Highlight } from 'react-vis/dist';\nimport \"./chartStyle.css\";\nimport API from \"../../utils/API\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport DiscreteColorLegend from 'react-vis/dist/legends/discrete-color-legend';\n\n\nfunction WeightChart() {\n\n  const [weightData, setWeightData] = useState();\n  const [leanBodyMassData, setLeanBodyMassData] = useState();\n  const [lastDrawLocation, setLastDrawLocation] = useState(null);\n\n  const ITEMS = [\n    \"Weight\",\n    \"Lean Body Mass\"\n  ];\n\n  useEffect(() => {\n    loadStats()\n  }, [])\n\n  const { user } = useAuth0()\n\n  function loadStats() {\n    let loginUserWeight = [];\n    let loginUserLeanBodyMass = [];\n\n    API.getWeightStats(user.sub)\n      .then(res => {\n        let loginUserStats = res.data;\n        //grab only the stats of the logged-in user\n\n        let firstDate;\n        if (loginUserStats[0]) {\n          firstDate = new Date(loginUserStats[0].date).getTime();\n        }\n\n        function determineXCoordinate(data) {\n          return (Math.ceil((new Date(data.date).getTime() - firstDate) / (1000 * 3600 * 24)))\n        }\n\n\n        //save weight information into loginUserWeight Array\n        loginUserStats.filter(data => data.weight)\n          .forEach(data => {\n            const coordinate =\n              { \"x\": determineXCoordinate(data), \"y\": data.weight }\n            loginUserWeight.push(coordinate);\n          });\n        //save lean body mass information into loginUserLeanBodyMass Array \n        loginUserStats.filter(data => data.leanBodyMass)\n          .forEach(data => {\n            const coordinate =\n              { \"x\": determineXCoordinate(data), \"y\": data.leanBodyMass }\n            loginUserLeanBodyMass.push(coordinate)\n          });\n      }).then(() => {\n\n        if (loginUserWeight.length === 0) {\n          setWeightData([{ x: 0, y: 0 }])\n        } else if (loginUserWeight.length > 0) {\n          setWeightData(loginUserWeight);\n        }\n\n        if (loginUserLeanBodyMass.length === 0) {\n          setLeanBodyMassData([{ x: 0, y: 0 }])\n        } else if (loginUserLeanBodyMass.length > 0) {\n          setLeanBodyMassData(loginUserLeanBodyMass);\n        }\n      })\n\n      .catch(err => console.log(err));\n  }\n  const myPalette = [\"green\", \"pink\"]\n\n  return (\n    <div className=\"row weight-chart\">\n      <div className=\"chart col-sm-10\">\n        <p className=\"chart-title\" >Weight and Lean Body Mass</p>\n      </div>\n      <div className=\"chart col-sm-3 mb-4 mx-4\">\n        <DiscreteColorLegend  orientation=\"horizontal\" colors={myPalette} width={300} items={ITEMS} />\n      </div>\n      <div className=\"chart col-sm-9\">\n        <FlexibleWidthXYPlot animation height={300}\n          xDomain={lastDrawLocation && [\n            lastDrawLocation.left,\n            lastDrawLocation.right\n          ]}\n          yDomain={lastDrawLocation && [\n            lastDrawLocation.bottom,\n            lastDrawLocation.top\n          ]}\n          colorType=\"category\"\n          colorDomain={[0, 1, 2, 3, 4, 5, 6, 7]}\n          colorRange={myPalette}>\n          <XAxis title=\"days\" />\n          <YAxis title=\"lbs\" />\n          <LineSeries data={weightData} color={0} />\n          <LineSeries data={leanBodyMassData} color={1} />\n          <Highlight\n            onBrushEnd={area => setLastDrawLocation(area)}\n            onDrag={area => {\n              setLastDrawLocation({\n                bottom: lastDrawLocation.bottom + (area.top - area.bottom),\n                left: lastDrawLocation.left - (area.right - area.left),\n                right: lastDrawLocation.right - (area.right - area.left),\n                top: lastDrawLocation.top + (area.top - area.bottom)\n              })\n\n            }}\n          />\n        </FlexibleWidthXYPlot>\n        <button\n          className=\"showcase-button btn btn-sm\"\n          onClick={() => setLastDrawLocation(null)}\n        >\n          Reset Zoom\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default WeightChart;\n","import React, { useEffect, useState } from 'react';\nimport \"../../../node_modules/react-vis/dist/style.css\"\nimport { LineSeries, XAxis, YAxis, FlexibleWidthXYPlot, Highlight, Hint } from 'react-vis/dist';\nimport \"./chartStyle.css\";\nimport API from \"../../utils/API\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport DiscreteColorLegend from 'react-vis/dist/legends/discrete-color-legend';\nimport _ from \"lodash\";\n\nfunction RepsChart() {\n  const [chest, setChest] = useState([{ x: 0, y: 0 }]);\n  const [back, setBack] = useState([{ x: 0, y: 0 }]);\n  const [shoulders, setShoulders] = useState([{ x: 0, y: 0 }]);\n  const [biceps, setBiceps] = useState([{ x: 0, y: 0 }]);\n  const [triceps, setTriceps] = useState([{ x: 0, y: 0 }]);\n  const [quadriceps, setQuadriceps] = useState([{ x: 0, y: 0 }]);\n  const [hamstringsAndGlutes, setHamstringAndGlutes] = useState([{ x: 0, y: 0 }]);\n  const [abdominals, setAbdominals] = useState([{ x: 0, y: 0 }]);\n  const [conditioning, setConditioning] = useState([{ x: 0, y: 0 }]);\n\n  const [lastDrawLocation, setLastDrawLocation] = useState(null);\n\n  const [value, setValue] = useState(null);\n\n  const ITEMS = [\n    'Chest',\n    'Back',\n    'Shoulders',\n    'Biceps',\n    'Triceps',\n    \"Quadriceps\",\n    \"Hamstrings And Glutes\",\n    \"Abdominals\",\n    \"Conditioning\"\n  ];\n\n  useEffect(() => {\n    loadStats()\n  }, [])\n\n  const { user } = useAuth0()\n\n  function loadStats() {\n    let chestData = [];\n    let backData = [];\n    let shouldersData = [];\n    let bicepsData = [];\n    let tricepsData = [];\n    let quadricepsData = [];\n    let hamstringsAndGlutesData = [];\n    let abdominalsData = [];\n    let conditioningData = [];\n\n    let chestCoord = [];\n    let backCoord = [];\n    let shouldersCoord = [];\n    let bicepsCoord = [];\n    let tricepsCoord = [];\n    let quadricepsCoord = [];\n    let hamstringsAndGlutesCoord = [];\n    let abdominalsCoord = [];\n    let conditioningCoord = [];\n\n    API.getRepsAndTime(user.sub)\n      .then(res => {\n        //grab only the stats of the logged-in user\n        let loginUserStats = res.data;\n\n        //if user has data saved, find date of first workout\n        let firstDate;\n        if (loginUserStats[0]) {\n          firstDate = new Date(loginUserStats[0].date).getTime();\n        }\n\n        function determineXCoordinate(data) {\n          return (Math.ceil((new Date(data.date).getTime() - firstDate) / (1000 * 3600 * 24)))\n        }\n\n        let final = [];\n\n        function aggregateData(rawData, muscleGroup) {\n          final = [];\n          // array for aggreated muscleGroup and date\n          //array of one object per date per mu.scle group\n          let evenTime = rawData.map(data => {\n            let evenTimeArray = data;\n            evenTimeArray.date = new Date(data.date).toISOString().substring(0, 10);\n            return evenTimeArray;\n          })\n          let grouped = _.groupBy(evenTime, \"date\");\n          // console.log(\"grouped: \" + JSON.stringify(grouped));\n          // return an array of keys in Object grouped (dates)\n          let keys = Object.keys(grouped);\n\n          for (let i = 0; i < keys.length; i++) {\n            let item = grouped[keys[i]];\n            //item has exercises sorted by dates, but includes all muscle groups\n            let sortedDateAndGroup = item.filter(data => data.muscleGroup === muscleGroup)\n            if (sortedDateAndGroup.length !== 0) {\n              let total = 0;\n              for (let x = 0; x < sortedDateAndGroup.length; x++) {\n                if (sortedDateAndGroup[x].totalReps) {\n                  total += sortedDateAndGroup[x].totalReps;\n                }\n              }\n              let object = {\n                date: sortedDateAndGroup[0].date,\n                totalReps: total,\n                muscleGroup: sortedDateAndGroup[0].muscleGroup\n              }\n              final.push(object);\n            }\n          }\n          return final;\n        }\n\n        backData = aggregateData(loginUserStats, \"Back\");\n        chestData = aggregateData(loginUserStats, \"Chest\");\n        shouldersData = aggregateData(loginUserStats, \"Shoulders\");\n        tricepsData = aggregateData(loginUserStats, \"Triceps\");\n        bicepsData = aggregateData(loginUserStats, \"Biceps\");\n        quadricepsData = aggregateData(loginUserStats, \"Quadriceps\");\n        hamstringsAndGlutesData = aggregateData(loginUserStats, \"Hamstrings and Glutes\");\n        abdominalsData = aggregateData(loginUserStats, \"Abs\");\n        conditioningData = aggregateData(loginUserStats, \"Conditioning\");\n\n\n        function generateCoords(array){\n          array.forEach( data => {\n            let coord = { \"x\": determineXCoordinate(data), \"y\": data.totalReps };\n            switch (data.muscleGroup) {\n              case \"Back\":\n                backCoord.push(coord);\n                break;\n              case \"Chest\":\n                chestCoord.push(coord);\n                break;\n              case \"Shoulders\":\n                shouldersCoord.push(coord);\n                break;\n              case \"Triceps\":\n                tricepsCoord.push(coord);\n                break;\n              case \"Biceps\":\n                bicepsCoord.push(coord);\n                break;\n              case \"Quadriceps\":\n                quadricepsCoord.push(coord);\n                break;\n              case \"Hamstrings and Glutes\":\n                hamstringsAndGlutesCoord.push(coord);\n                break;\n              case \"Abs\":\n                abdominalsCoord.push(coord);\n                break;\n              case \"Conditioning\":\n                conditioningCoord.push(coord);\n            }\n          })\n        }\n\n        generateCoords(chestData);\n        generateCoords(backData);\n        generateCoords(shouldersData);\n        generateCoords(bicepsData);\n        generateCoords(tricepsData);\n        generateCoords(quadricepsData);\n        generateCoords(hamstringsAndGlutesData);\n        generateCoords(abdominalsData);\n        generateCoords(conditioningData);\n\n      }).then(() => {\n        if (abdominalsCoord.length > 0) {\n          setAbdominals(abdominalsCoord)\n        };\n        if (backCoord.length > 0) {\n          setBack(backCoord);\n        };\n        if (chestCoord.length > 0) {\n          setChest(chestCoord)\n        };\n        if (shouldersCoord.length > 0) {\n          setShoulders(shouldersCoord);\n        };\n        if (tricepsCoord.length > 0) {\n          setTriceps(tricepsCoord)\n        };\n        if (bicepsCoord.length > 0) {\n          setBiceps(bicepsCoord)\n        };\n        if (quadricepsCoord.length > 0) {\n          setQuadriceps(quadricepsCoord)\n        };\n        if (hamstringsAndGlutesCoord.length > 0) {\n          setHamstringAndGlutes(hamstringsAndGlutesCoord)\n        };\n        if (conditioningCoord.length > 0) {\n          setConditioning(conditioningCoord)\n        }\n      })\n      .catch(err => console.log(err));\n  }\n  //plug in the colors of the Line Series here:\n  const myPalette = [\"#de2a2a\", \"blue\", \"#03fce7\", \"#06cc21\", \"orange\", \"purple\", \"#e6f029\", \"pink\", \"#04592d\"]\n  return (\n    <div className=\"row reps-chart\">\n      <div className=\"chart col-sm-10\">\n        <p className=\"chart-title\">Exercise Reps by Muscle Group</p>\n      </div>\n      <div className=\"chart col-sm-11 mb-4\">\n        <DiscreteColorLegend orientation=\"horizontal\" colors={myPalette} items={ITEMS} />\n      </div>\n      <div className=\"chart col-sm-9\">\n        {/* plug in the x and y range here */}\n        <FlexibleWidthXYPlot height={300}\n          xDomain={lastDrawLocation && [\n            lastDrawLocation.left,\n            lastDrawLocation.right\n          ]}\n          yDomain={lastDrawLocation && [\n            lastDrawLocation.bottom,\n            lastDrawLocation.top\n          ]}\n          colorType=\"category\"\n          colorDomain={[0, 1, 2, 3, 4, 5, 6, 7, 8]}\n          colorRange={myPalette}>\n\n          {/* colors are according to index numbers within the myPalette array */}\n          <LineSeries onValueMouseOver={(value) => setValue({value})} data={chest} color={0} />\n          <LineSeries data={back} color={1} />\n          <LineSeries data={shoulders} color={2}/>\n          <LineSeries data={biceps} color={3} />\n          <LineSeries data={triceps} color={4} />\n          <LineSeries data={quadriceps} color={5} />\n          <LineSeries data={hamstringsAndGlutes} color={6} />\n          <LineSeries data={abdominals} color={7} />\n          <LineSeries data={conditioning} color={8} />\n          <Highlight\n            onBrushEnd={area => setLastDrawLocation(area)}\n            onDrag={area => {\n              setLastDrawLocation({\n                bottom: lastDrawLocation.bottom + (area.top - area.bottom),\n                left: lastDrawLocation.left - (area.right - area.left),\n                right: lastDrawLocation.right - (area.right - area.left),\n                top: lastDrawLocation.top + (area.top - area.bottom)\n              })\n\n            }}\n          />\n          <XAxis title=\"days\" />\n          <YAxis title=\"reps\" />\n          {value ? <Hint value={value} /> : null}\n        </FlexibleWidthXYPlot>\n        <button\n          className=\"showcase-button btn btn-sm\"\n          onClick={() => setLastDrawLocation(null)}\n        >\n          Reset Zoom\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default RepsChart;","import React, { useEffect, useState } from 'react';\nimport \"../../../node_modules/react-vis/dist/style.css\"\nimport { FlexibleWidthXYPlot, LineSeries, XAxis, YAxis, Highlight } from 'react-vis/dist';\nimport \"./chartStyle.css\";\nimport API from \"../../utils/API\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport DiscreteColorLegend from 'react-vis/dist/legends/discrete-color-legend';\nimport _ from \"lodash\";\n\n\nfunction TimeChart() {\n\n  const [chest, setChest] = useState([{ x: 0, y: 0 }]);\n  const [back, setBack] = useState([{ x: 0, y: 0 }]);\n  const [shoulders, setShoulders] = useState([{ x: 0, y: 0 }]);\n  const [biceps, setBiceps] = useState([{ x: 0, y: 0 }]);\n  const [triceps, setTriceps] = useState([{ x: 0, y: 0 }]);\n  const [quadriceps, setQuadriceps] = useState([{ x: 0, y: 0 }]);\n  const [hamstringsAndGlutes, setHamstringAndGlutes] = useState([{ x: 0, y: 0 }]);\n  const [abdominals, setAbdominals] = useState([{ x: 0, y: 0 }]);\n  const [conditioning, setConditioning] = useState([{ x: 0, y: 0 }]);\n\n  const [lastDrawLocation, setLastDrawLocation] = useState(null);\n\n  const ITEMS = [\n    'Chest',\n    'Back',\n    'Shoulders',\n    'Biceps',\n    'Triceps',\n    \"Quadriceps\",\n    \"Hamstrings And Glutes\",\n    \"Abdominals\",\n    \"Conditioning\"\n  ];\n\n  useEffect(() => {\n    loadStats()\n  }, [])\n\n  const { user } = useAuth0()\n\n  function loadStats() {\n    let chestData = [];\n    let backData = [];\n    let shouldersData = [];\n    let bicepsData = [];\n    let tricepsData = [];\n    let quadricepsData = [];\n    let hamstringsAndGlutesData = [];\n    let abdominalsData = [];\n    let conditioningData = [];\n\n    let chestCoord = [];\n    let backCoord = [];\n    let shouldersCoord = [];\n    let bicepsCoord = [];\n    let tricepsCoord = [];\n    let quadricepsCoord = [];\n    let hamstringsAndGlutesCoord = [];\n    let abdominalsCoord = [];\n    let conditioningCoord = [];\n\n    API.getRepsAndTime(user.sub)\n      .then(res => {\n        //grab only the stats of the logged-in user\n        let loginUserStats = res.data;\n        let firstDate;\n        // console.log(loginUserStats);\n        if (loginUserStats[0]) {\n          firstDate = new Date(loginUserStats[0].date).getTime();\n        }\n\n        function determineXCoordinate(data) {\n          return (\n            Math.ceil((new Date(data.date).getTime() - firstDate) / (1000 * 3600 * 24))\n          )\n        }\n\n        let final = [];\n\n        function aggregateData(rawData, muscleGroup) {\n          final = [];\n          // array for aggreated muscleGroup and date\n          //array of one object per date per mu.scle group\n          let evenTime = rawData.map(data => {\n            let evenTimeArray = data;\n            evenTimeArray.date = new Date(data.date).toISOString().substring(0, 10);\n            return evenTimeArray;\n          })\n          let grouped = _.groupBy(evenTime, \"date\");\n          // console.log(\"grouped: \" + JSON.stringify(grouped));\n          // return an array of keys in Object grouped (dates)\n          let keys = Object.keys(grouped);\n\n          for (let i = 0; i < keys.length; i++) {\n            let item = grouped[keys[i]];\n            //item has exercises sorted by dates, but includes all muscle groups\n            let sortedDateAndGroup = item.filter(data => data.muscleGroup === muscleGroup)\n            if (sortedDateAndGroup.length !== 0) {\n              let total = 0;\n              for (let x = 0; x < sortedDateAndGroup.length; x++) {\n                if (sortedDateAndGroup[x].totalTime) {\n                  total += sortedDateAndGroup[x].totalTime;\n                }\n              }\n              let object = {\n                date: sortedDateAndGroup[0].date,\n                totalTime: total,\n                muscleGroup: sortedDateAndGroup[0].muscleGroup\n              }\n              final.push(object);\n            }\n          }\n        return final;       \n}\n\n\n        backData = aggregateData(loginUserStats, \"Back\");\n        chestData = aggregateData(loginUserStats, \"Chest\");\n        shouldersData = aggregateData(loginUserStats, \"Shoulders\");\n        tricepsData = aggregateData(loginUserStats, \"Triceps\");\n        bicepsData = aggregateData(loginUserStats, \"Biceps\");\n        quadricepsData = aggregateData(loginUserStats, \"Quadriceps\");\n        hamstringsAndGlutesData = aggregateData(loginUserStats, \"Hamstrings and Glutes\");\n        abdominalsData = aggregateData(loginUserStats, \"Abs\");\n        conditioningData = aggregateData(loginUserStats, \"Conditioning\");\n\n        \n        function generateCoords(array){\n          array.forEach( data => {\n            let coord = { \"x\": determineXCoordinate(data), \"y\": data.totalTime };\n            switch (data.muscleGroup) {\n              case \"Back\":\n                backCoord.push(coord);\n                break;\n              case \"Chest\":\n                chestCoord.push(coord);\n                break;\n              case \"Shoulders\":\n                shouldersCoord.push(coord);\n                break;\n              case \"Triceps\":\n                tricepsCoord.push(coord);\n                break;\n              case \"Biceps\":\n                bicepsCoord.push(coord);\n                break;\n              case \"Quadriceps\":\n                quadricepsCoord.push(coord);\n                break;\n              case \"Hamstrings and Glutes\":\n                hamstringsAndGlutesCoord.push(coord);\n                break;\n              case \"Abs\":\n                abdominalsCoord.push(coord);\n                break;\n              case \"Conditioning\":\n                conditioningCoord.push(coord);\n            }\n          })\n        }\n\n        generateCoords(chestData);\n        generateCoords(backData);\n        generateCoords(shouldersData);\n        generateCoords(bicepsData);\n        generateCoords(tricepsData);\n        generateCoords(quadricepsData);\n        generateCoords(hamstringsAndGlutesData);\n        generateCoords(abdominalsData);\n        generateCoords(conditioningData);\n\n      }).then(() => {\n        // console.log(backCoord);\n        if (abdominalsCoord.length > 0) {\n          setAbdominals(abdominalsCoord)\n        };\n        if (backCoord.length > 0) {\n          setBack(backCoord);\n        };\n        if (chestCoord.length > 0) {\n          setChest(chestCoord)\n        };\n        if (shouldersCoord.length > 0) {\n          setShoulders(shouldersCoord);\n        };\n        if (tricepsCoord.length > 0) {\n          setTriceps(tricepsCoord)\n        };\n        if (bicepsCoord.length > 0) {\n          setBiceps(bicepsCoord)\n        };\n        if (quadricepsCoord.length > 0) {\n          setQuadriceps(quadricepsCoord)\n        };\n        if (hamstringsAndGlutesCoord.length > 0) {\n          setHamstringAndGlutes(hamstringsAndGlutesCoord)\n        };\n        if (conditioningCoord.length > 0) {\n          setConditioning(conditioningCoord)\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  //plug in the colors of the Line Series here:\n  const myPalette = [\"#de2a2a\", \"blue\", \"#03fce7\", \"#06cc21\", \"orange\", \"purple\", \"#e6f029\", \"pink\", \"#04592d\"]\n\n  return (\n    <div className=\"row time-chart\">\n      <div className=\"chart col-sm-10\">\n        <p className=\"chart-title\">Exercise Time by Muscle Group</p>\n      </div>\n      <div className=\"chart col-sm-11 mb-4\">\n        <DiscreteColorLegend orientation=\"horizontal\" colors={myPalette} items={ITEMS} />\n      </div>\n\n      <div className=\"chart col-sm-9\">\n        {/* plug in the x and y range here */}\n        <FlexibleWidthXYPlot height={300}\n          xDomain={lastDrawLocation && [\n            lastDrawLocation.left,\n            lastDrawLocation.right\n          ]}\n          yDomain={lastDrawLocation && [\n            lastDrawLocation.bottom,\n            lastDrawLocation.top\n          ]}\n          colorType=\"category\"\n          colorDomain={[0, 1, 2, 3, 4, 5, 6, 7, 8]}\n          colorRange={myPalette}>\n\n          {/* colors are according to index numbers within the myPalette array */}\n          <LineSeries data={chest} color={0} />\n          <LineSeries data={back} color={1} />\n          <LineSeries data={shoulders} color={2} />\n          <LineSeries data={biceps} color={3} />\n          <LineSeries data={triceps} color={4} />\n          <LineSeries data={quadriceps} color={5} />\n          <LineSeries data={hamstringsAndGlutes} color={6} />\n          <LineSeries data={abdominals} color={7} />\n          <LineSeries data={conditioning} color={8} />\n\n          <Highlight\n            onBrushEnd={area => setLastDrawLocation(area)}\n            onDrag={area => {\n              setLastDrawLocation({\n                bottom: lastDrawLocation.bottom + (area.top - area.bottom),\n                left: lastDrawLocation.left - (area.right - area.left),\n                right: lastDrawLocation.right - (area.right - area.left),\n                top: lastDrawLocation.top + (area.top - area.bottom)\n              })\n\n            }}\n          />\n\n          {/* plug in x and y axis title here */}\n          <XAxis title=\"days\" />\n          <YAxis title=\"secs\" />\n        </FlexibleWidthXYPlot>\n        <button\n          className=\"showcase-button btn btn-sm\"\n          onClick={() => setLastDrawLocation(null)}\n        >\n          Reset Zoom\n        </button>\n      </div>\n    </div>\n  );\n\n}\n\nexport default TimeChart;","import Navbar from \"../components/Navbar/Navbar\"\nimport Footer from \"../components/Footer/Footer\"\nimport Wrapper from \"../components/Wrapper/Wrapper\"\nimport StatsLink from \"../components/Dashboardlinks/Dashboardlinks\"\nimport React from 'react';\nimport PieChart from \"../components/Datadashboard/PieChart\";\nimport WeightChart from \"../components/Datadashboard/WeightChart\";\nimport RepsChart from \"../components/Datadashboard/RepsChart\";\nimport TimeChart from \"../components/Datadashboard/TimeChart\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport \"./style.css\"\n\n\nfunction Dashboard() {\n  const { user } = useAuth0();\n  let username;\n  if (user.given_name) {\n    username = user.given_name;\n  } else {\n    username = user.nickname;\n  }\n\n\n  return (\n    <div>\n      <Navbar />\n      <Wrapper>      \n            <p className=\"username\">Hello, <span>{username}</span></p>\n            <PieChart />\n            <WeightChart />\n            <RepsChart />\n            <TimeChart />\n          <StatsLink />\n      </Wrapper>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Dashboard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Container(props) {\n  return <main className=\"stats-container container\">{props.children}</main>;\n}\n\nexport default Container;","import React, { useState } from 'react';\nimport API from \"../utils/API\";\nimport Navbar from \"../components/Navbar/Navbar\"\nimport Footer from \"../components/Footer/Footer\"\nimport Wrapper from \"../components/Wrapper/Wrapper\"\nimport StatsContainer from \"../components/StatsContainer/StatsContainer\"\nimport { useAuth0 } from '@auth0/auth0-react';\nimport \"../components/Wrapper/login.css\"\n\n\n\nfunction Stats() {\n  const {user} = useAuth0();\n\n  // console.log(user);\n\n  const [formObject, setFormObject] = useState({\n    weight: null,\n    leanBodyMass: null,\n    token: \"\",\n    date: null\n  })\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  };\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.weight || formObject.leanBodyMass) {\n      API.saveStats({\n        weight: parseInt(formObject.weight),\n        leanBodyMass: parseInt(formObject.leanBodyMass),\n        token: user.sub,\n        date: new Date()\n      })\n        .then(() => setFormObject({\n          weight: \"\",\n          leanBodyMass: \"\"\n        }))\n        .catch(err => console.log(err));\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <Wrapper>\n      <StatsContainer>\n        <div className=\"row justify-content-md-center\">\n        <form className=\"form-inline mt-5 mb-2\">\n          <div className=\"form-group mx-sm-3 mb-2\">\n            <label htmlFor=\"inputWeight\" className=\"sr-only\">Weight</label>\n            <input onChange={handleInputChange} name=\"weight\" value={formObject.weight} className=\"form-control\" id=\"weight\" placeholder=\"Enter Weight (Lbs)\" />\n          </div>\n          <button onClick={handleFormSubmit} type=\"submit\" className=\"btn-enterStats btn-sm mb-2\">Record</button>\n        </form>\n        </div>\n        <div className=\"row justify-content-md-center\">\n        <form className=\"form-inline mb-5\">\n          <div className=\"form-group mx-sm-3 mb-2\">\n            <label htmlFor=\"inputLeanBodyMass\" className=\"sr-only\">Lean Body Mass</label>\n            <input onChange={handleInputChange} name=\"leanBodyMass\" value={formObject.leanBodyMass} className=\"form-control\" id=\"leanBodyMass\" placeholder=\"Enter Lean Body Mass (Lbs)\" />\n          </div>\n          <button onClick={handleFormSubmit} type=\"submit\" className=\"btn-enterStats btn-sm mb-2\">Record</button>\n        </form>\n        </div>\n        </StatsContainer>\n      </Wrapper>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Stats;","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { ProtectedRoute } from \"./ProtectedRoute\";\nimport Home from './Home';\nimport Muscles from \"./pages/Choosemuscles\"\nimport Workouts from \"./pages/Createworkout\"\nimport Dashboard from \"./pages/Datadashboard\"\nimport Stats from \"./pages/Enterstats\"\n\nfunction App() {\n  return (\n    <Router>\n     \n      <div>\n        <Route exact path='/' component={Home}/>\n        <ProtectedRoute exact path=\"/dashboard\" component={Dashboard} />\n        <ProtectedRoute exact path=\"/stats\" component={Stats} />\n        <ProtectedRoute exact path=\"/build\" component={Muscles} />\n        <ProtectedRoute exact path=\"/workouts\" component={Workouts} />\n      </div>\n      \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nReactDOM.render(\n  <Auth0Provider\n    domain=\"dev-i9pv14xc.us.auth0.com\"\n    // audience=\"https://dev-i9pv14xc.us.auth0.com/userinfo\"\n    clientId=\"avn3Nb54qAqLyEOXUMpRFVdFPxxopLFW\"\n    redirectUri= {window.location.origin}\n    // responseType=\"id_token\"\n    // scope=\"openid profile\"\n  >\n    <React.Fragment>\n      <App />\n    </React.Fragment>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}